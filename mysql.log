mysql> DROP DATABASE IF EXISTS JWang1568Class;
Query OK, 0 rows affected, 1 warning (0.00 sec)

mysql> CREATE TABLE JWang1568Class (name VARCHAR(50), age smallint UNSIGNED, personID int NOT NULL AUTO_INCREMENT PRIMARY KEY);
Query OK, 0 rows affected (0.02 sec)

mysql>
mysql>
mysql> DESCRIBE JWang1568Class;
+----------+-------------------+------+-----+---------+----------------+
| Field    | Type              | Null | Key | Default | Extra          |
+----------+-------------------+------+-----+---------+----------------+
| name     | varchar(50)       | YES  |     | NULL    |                |
| age      | smallint unsigned | YES  |     | NULL    |                |
| personID | int               | NO   | PRI | NULL    | auto_increment |
+----------+-------------------+------+-----+---------+----------------+
3 rows in set (0.01 sec)

mysql> INSERT INTO JWang1568Class (name, age, PersonID) VALUES ("Felicia", 28, 1002);
Query OK, 1 row affected (0.01 sec)

mysql> DESCRIBE JWang1568Class;
+----------+-------------------+------+-----+---------+----------------+
| Field    | Type              | Null | Key | Default | Extra          |
+----------+-------------------+------+-----+---------+----------------+
| name     | varchar(50)       | YES  |     | NULL    |                |
| age      | smallint unsigned | YES  |     | NULL    |                |
| personID | int               | NO   | PRI | NULL    | auto_increment |
+----------+-------------------+------+-----+---------+----------------+
3 rows in set (0.00 sec)

mysql> select * from JWang1568Class;
+---------+------+----------+
| name    | age  | personID |
+---------+------+----------+
| Felicia |   28 |     1002 |
+---------+------+----------+
1 row in set (0.00 sec)

mysql> INSERT INTO JWang1568Class (name, age) VALUES ("Kenny", 26);
Query OK, 1 row affected (0.01 sec)

mysql> select * from JWang1568Class
    -> ;
+---------+------+----------+
| name    | age  | personID |
+---------+------+----------+
| Felicia |   28 |     1002 |
| Kenny   |   26 |     1003 |
+---------+------+----------+
2 rows in set (0.00 sec)

mysql> show tables
    -> ;
+---------------------+
| Tables_in_jwang1568 |
+---------------------+
| JWang1568Class      |
+---------------------+
1 row in set (0.01 sec)

mysql>
mysql>
mysql> select name from JWang1568Class
    -> ;
+---------+
| name    |
+---------+
| Felicia |
| Kenny   |
+---------+
2 rows in set (0.00 sec)

mysql> status
--------------
mysql  Ver 8.0.37-0ubuntu0.22.04.3 for Linux on x86_64 ((Ubuntu))

Connection id:          8
Current database:       jwang1568
Current user:           root@localhost
SSL:                    Not in use
Current pager:          stdout
Using outfile:          ''
Using delimiter:        ;
Server version:         8.0.37-0ubuntu0.22.04.3 (Ubuntu)
Protocol version:       10
Connection:             Localhost via UNIX socket
Insert id:              1003
Server characterset:    utf8mb4
Db     characterset:    utf8mb4
Client characterset:    utf8mb4
Conn.  characterset:    utf8mb4
UNIX socket:            /var/run/mysqld/mysqld.sock
Binary data as:         Hexadecimal
Uptime:                 1 hour 1 min 4 sec

Threads: 2  Questions: 48  Slow queries: 0  Opens: 142  Flush tables: 3  Open tables: 61  Queries per second avg: 0.013
--------------

mysql>
mysql> help

For information about MySQL products and services, visit:
   http://www.mysql.com/
For developer information, including the MySQL Reference Manual, visit:
   http://dev.mysql.com/
To buy MySQL Enterprise support, training, or other products, visit:
   https://shop.mysql.com/

List of all MySQL commands:
Note that all text commands must be first on line and end with ';'
?         (\?) Synonym for `help'.
clear     (\c) Clear the current input statement.
connect   (\r) Reconnect to the server. Optional arguments are db and host.
delimiter (\d) Set statement delimiter.
edit      (\e) Edit command with $EDITOR.
ego       (\G) Send command to mysql server, display result vertically.
exit      (\q) Exit mysql. Same as quit.
go        (\g) Send command to mysql server.
help      (\h) Display this help.
nopager   (\n) Disable pager, print to stdout.
notee     (\t) Don't write into outfile.
pager     (\P) Set PAGER [to_pager]. Print the query results via PAGER.
print     (\p) Print current command.
prompt    (\R) Change your mysql prompt.
quit      (\q) Quit mysql.
rehash    (\#) Rebuild completion hash.
source    (\.) Execute an SQL script file. Takes a file name as an argument.
status    (\s) Get status information from the server.
system    (\!) Execute a system shell command.
tee       (\T) Set outfile [to_outfile]. Append everything into given outfile.
use       (\u) Use another database. Takes database name as argument.
charset   (\C) Switch to another charset. Might be needed for processing binlog with multi-byte charsets.
warnings  (\W) Show warnings after every statement.
nowarning (\w) Don't show warnings after every statement.
resetconnection(\x) Clean session context.
query_attributes Sets string parameters (name1 value1 name2 value2 ...) for the next query to pick up.
ssl_session_data_print Serializes the current SSL session data to stdout or file

For server side help, type 'help contents'
mysql>
